#+TITLE: Last Chapter
#+AUTHOR: Rick Neff
#+EMAIL: rick.neff@gmail.com
#+LANGUAGE: en
#+OPTIONS: H:4 num:t toc:nil \n:nil @:t ::t |:t ^:t *:t TeX:t LaTeX:t ':t
#+STARTUP: showeverything entitiespretty

   "Are these exported as smart quotes"?

#+BEGIN_SRC emacs-lisp
  (let* ((all (number-sequence 1 199))
         (all-odds (delete-if 'evenp all))
         (all-floored-square-roots (mapcar (lambda (n) (floor (sqrt n))) all-odds)))
    all-floored-square-roots)
#+END_SRC

#+RESULTS:
| 1 | 1 | 2 | 2 | 3 | 3 | 3 | 3 | 4 | 4 | 4 | 4 | 5 | 5 | 5 | 5 | 5 | 5 | 6 | 6 | 6 | 6 | 6 | 6 | 7 | 7 | 7 | 7 | 7 | 7 | 7 | 7 | 8 | 8 | 8 | 8 | 8 | 8 | 8 | 8 | 9 | 9 | 9 | 9 | 9 | 9 | 9 | 9 | 9 | 9 | 10 | 10 | 10 | 10 | 10 | 10 | 10 | 10 | 10 | 10 | 11 | 11 | 11 | 11 | 11 | 11 | 11 | 11 | 11 | 11 | 11 | 11 | 12 | 12 | 12 | 12 | 12 | 12 | 12 | 12 | 12 | 12 | 12 | 12 | 13 | 13 | 13 | 13 | 13 | 13 | 13 | 13 | 13 | 13 | 13 | 13 | 13 | 13 | 14 | 14 |


#+BEGIN_SRC emacs-lisp
  (require 'calc-comb)

  (defun bernoulli-probability (n k p q)
    (* (calcFunc-choose n k) (expt p k) (expt q (- n k))))

  (let* ((p 0.00016)
         (q (- 1 p))
         (n 100))
    (loop for k from 0 to 10
          collect (list k (bernoulli-probability n k p q))))
#+END_SRC

#+RESULTS:
|  0 |     0.9841260602387347 |
|  1 |    0.01574853672969651 |
|  2 | 0.00012474837063849854 |
|  3 |  6.521224901356408e-07 |
|  4 |  2.530640164152551e-09 |
|  5 |   7.77537064357961e-12 |
|  6 | 1.9700757751641943e-14 |
|  7 | 4.2335258867803827e-17 |
|  8 |  7.875618248331248e-20 |
|  9 | 1.2883072471088258e-22 |
| 10 | 1.8760755238742706e-25 |

#+BEGIN_SRC dot :file fig-chomsky-hierarchy.png
#digraph G { bgcolor="purple:pink" label="agraph" fontcolor="white"
# subgraph cluster1 {fillcolor="blue:cyan" label="acluster" fontcolor="white" style="filled" gradientangle="270"
#	node [shape=box fillcolor="red:yellow" style="filled" gradientangle=90]
#	anode;
#}
# 
  digraph Chomsky { label="Universal Set of All Languages (the superset of Types 0-3)"
    subgraph cluster1 { label="Type 0 Recursively Enumerable Languages"
       subgraph cluster2 { label="Type 1 Context Sensitive Languages"
         subgraph cluster3 { label="Type 2 Context Free Languages"
           node [shape=box] innermost [label="Type 3 Regular Languages"];
      }
    }
  }
}
#+END_SRC
